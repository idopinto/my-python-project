# .github/workflows/python-test.yml
name: Python CI

on:
  push:
    branches:
      - main # or master, depending on your default branch name
  pull_request:
    branches:
      - main # or master
  workflow_dispatch:
    inputs:
      python_version:
        description: 'Python version to test (e.g., 3.10, 3.11, or all)'
        default: 'all'
        type: choice
        options:
          - 'all'
          - '3.8'
          - '3.9'
          - '3.10'
          - '3.11'
          - '3.12'
          - '3.13'
      run_lint_and_format_checks:
        description: 'Run linting and formatting checks?'
        required: false
        default: true
        type: boolean
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false # <--- Recommended for matrix jobs if one failure shouldn't stop others
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12','3.13']
    if: github.event_name != 'workflow_dispatch' || github.event.inputs.python_version == 'all' || contains(github.event.inputs.python_version, matrix.python-version)

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'  # Enable pip caching
          cache-dependency-path: requirements.txt  # Tell it which file to use for cache key
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with Flake8
        if: github.event.inputs.run_lint_and_format_checks == 'true' || github.event_name != 'workflow_dispatch' # Run if input is true or if not a manual dispatch

        run: flake8 src/ tests/ --count --show-source --statistics

      - name: Check code with formatting with Black
        if: github.event.inputs.run_lint_and_format_checks == 'true' || github.event_name != 'workflow_dispatch' # Run if input is true or if not a manual dispatch
        run: |
          black --check --diff src/ tests/
      - name: Run tests and collect coverage
        run: |
          coverage run -m unittest discover -s tests
          coverage report -m # Print summary to console
          coverage html -d htmlcov # Generate HTML report in htmlcov/ directory
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-python-${{ matrix.python-version }}
          path: htmlcov/
          retention-days: 7
  notify-on-failure:
    runs-on: ubuntu-latest
    needs: build
    if: failure()

    steps:
      - name: Send Slack notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_MESSAGE: "❌ Build failed for ${{ github.repository }} on branch `${{ github.ref_name }}`!
                          Check out the logs: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          SLACK_COLOR: "danger" # Red color for failure
          SLACK_USERNAME: "GitHub Actions Bot"
          SLACK_ICON_EMOJI: ":x:"
